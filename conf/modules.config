/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: FASTQC {
        ext.args = '--quiet'
    }

    withName: FASTP {
        // Performs deduplication
        ext.args = '-D'
    }    

    withName: 'MULTIQC' {
        ext.args   = { params.multiqc_title ? "--title \"$params.multiqc_title\"" : '' }
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    
    withName: BWAMEM2_INDEX_1 {
        // Saves only unmapped readpairs
        publishDir = [
            [
                path: { "${params.outdir}/bwamem2/1/index/" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        ]
        ext.args2 = '-h -f12'
    }

    withName: BWAMEM2_INDEX_2 {
        // Saves only unmapped readpairs
        publishDir = [
            [
                path: { "${params.outdir}/bwamem2/2/index" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        ]
        ext.args2 = '-h -f12'
    }

    withName: BWAMEM2_MEM_1 {
        // Saves only unmapped readpairs
        publishDir = [
            [
                path: { "${params.outdir}/bwamem2/1" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        ]
        ext.args2 = '-h -f12'
    }

    withName: BWAMEM2_MEM_2 {
        // Saves only unmapped readpairs
        publishDir = [
            [
                path: { "${params.outdir}/bwamem2/2" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        ]
        ext.args2 = '-h -f12'
    }

    withName: SAMTOOLS_FLAGSTAT_1 {
        publishDir = [
            [
                path: { "${params.outdir}/samtools/flagstat/1" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        ]
    }

    withName: SAMTOOLS_FLAGSTAT_2 {
        publishDir = [
            [
                path: { "${params.outdir}/samtools/flagstat/2" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        ]
    }

    withName: SAMTOOLS_FASTQ_1 {
        publishDir = [
            [
                path: { "${params.outdir}/samtools/1" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        ]
    }

    withName: SAMTOOLS_FASTQ_2 {
        publishDir = [
            [
                path: { "${params.outdir}/samtools/2" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        ]
    }

    withName: SAMTOOLS_FASTQ_NOGZIP {
        publishDir = [
            [
                path: { "${params.outdir}/samtools/uncompressed" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        ]
    }

    withName: KRAKEN2_KRAKEN2 {
        // Set confidence to 0.05
        ext.args = '--confidence 0.05'
    }

   withName: UNTAR {
        ext.prefix = "card_database"
        publishDir = [
            [
                path: { "${params.outdir}/databases/rgi" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        ]
    }

    withName: RGI_CARDANNOTATION {
    publishDir = [
            [
                path: { "${params.outdir}/databases/rgi" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        ]
    }
    
    withName: RGI_MAIN {
        publishDir = [
            [
                path: { "${params.outdir}/rgi/${meta.id}" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
                pattern: "*.{txt}"
                ],
            [
                path: { "${params.outdir}/rgi/${meta.id}" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
                pattern: "*.{json}",
                ],
            [
                path: { "${params.outdir}/rgi/${meta.id}/" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
                pattern: "*temp*",
            ]
        ]
        ext.args2 = [
            '--low_quality'
        ]
    }

    withName: FARGENE {
        ext.args = '--meta'
    }

    withName: KRAKENTOOLS_KRAKEN2_KREPORT2KRONA {
        publishDir = [
            [
                path: { "${params.outdir}/krakentools/kraken2" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        ]
    }
    withName: KRAKENTOOLS_BRACKEN_KREPORT2KRONA {
        publishDir = [
            [
                path: { "${params.outdir}/krakentools/bracken" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        ]
    }
    withName: KRONA_KRAKEN2_KTIMPORTTEXT {
        publishDir = [
            [
                path: { "${params.outdir}/krona/kraken2" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        ]
    }
    withName: KRONA_BRACKEN_KTIMPORTTEXT {
        publishDir = [
            [
                path: { "${params.outdir}/krona/bracken" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        ]
    }
}
